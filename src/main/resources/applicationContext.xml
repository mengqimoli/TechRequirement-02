<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 注入的顺序：jdbc.properties->dataSource->sessionFactory->dao->service->junit->action -->
	<!-- 除了Action，其他全部配置单例，默认 -->

	<!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 获取连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}">
		<!--maxActive: 最大连接数量 -->
		<property name="maxActive" value="150" />
		<!--minIdle: 最小空闲连接 -->
		<property name="minIdle" value="5" />
		<!--maxIdle: 最大空闲连接 -->
		<property name="maxIdle" value="20" />
		<!--initialSize: 初始化连接 -->
		<property name="initialSize" value="30" />
		<!-- 连接被泄露时是否打印 -->
		<property name="logAbandoned" value="true" />
		<!--removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true" />
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="10" />
		<!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒 -->
		<property name="maxWait" value="1000" />
		<!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->
		<property name="timeBetweenEvictionRunsMillis" value="10000" />
		<!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
		<property name="numTestsPerEvictionRun" value="10" />
		<!-- 1000 * 60 * 30 连接在池中保持空闲而不被空闲连接回收器线程 -->
		<property name="minEvictableIdleTimeMillis" value="10000" />
		<property name="validationQuery" value="SELECT NOW() FROM DUAL" />
	</bean>

	<!-- 获取tomcat服务器连接池 -->
	<!-- <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/petclinic"/> -->

	<!-- Hibernate SessionFactory -->
	<!-- 1.连接池 2 映射文件 3其他hibernate的配置信息 -->
	<!-- 删掉p:mappingResources="petclinic.hbm.xml只能一个一个引入映射文件" -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- 2 映射文件 :A.添加classpath*前缀，B.必须使用通配符* -->
		<!-- private Resource[] mappingLocations; -->
		<property name="mappingLocations"
			value="classpath*:com/wyl/techrequirement/domain/*.hbm.xml" />
		<!-- 3其他hibernate的配置信息 -->
		<property name="hibernateProperties">
			<props>
				<!-- 左边的key是不能写错的，右边引入配置文件的key可以写错，但是要一致 -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

	<!-- 1.事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<!-- 2.切入点 -->
	<aop:config>
		<aop:advisor
			pointcut="execution(* com.wyl.techrequirement.service.I*Service.*(..))"
			advice-ref="txAdvice" />
	</aop:config>

	<!-- 3.事务属性 -->
	<!-- transaction-manager="transactionManager"可以不用配置，默认值 -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<!-- 如果不需要事务service层方法名必须以：get和find开头 -->
			<tx:method name="get*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="find*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- 因为是spring版本2.x,最好创建一个文件夹manager,在manager添加很多配置文件 -->
	<import resource="classpath:manager/*Context.xml" />

</beans>
